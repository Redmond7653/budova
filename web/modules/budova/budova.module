<?php

use Drupal\Component\Utility\Html;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Url;

/**
 * Implements hook_form_alter().
 */
function budova_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  $z = 0;
}


function budova_form_user_register_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

  $triggering_element = $form_state->getTriggeringElement();
  $roles_array = $form_state->getValue('roles');

  if($triggering_element) {
    if (in_array("buyer", $roles_array) || in_array("seller", $roles_array)) {
      $form['account']['name']['#access'] = FALSE;
      $form['account']['name']['#default_value'] = 'default';
      $form['account']['name']['#required'] = FALSE;

//      $form['account']['pass']['#required'] = FALSE;

      $form['account']['pass']['#access'] = FALSE;
      $form['account']['pass']['#required'] = FALSE;

    }
  }
//  if ($triggering_element["#name"] == 'roles[buyer]') {
//
//    $selected_buyer_chose = TRUE;
//  }

  $form['account']['#attributes']['id'] = Html::getUniqueId('test_id');

    $form['account']['roles']['#ajax'] = [
      'callback' => 'budova_reloadUser',
      'wrapper' => $form['account']['#attributes']['id'],
    ];


  $form['actions']['submit']['#submit'][] = 'budova_users_submit_do_redirect';
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function budova_form_user_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

  $triggering_element = $form_state->getTriggeringElement();
  $roles_array = $form_state->getValue('roles');

  if($triggering_element) {
    if (in_array("buyer", $roles_array) || in_array("seller", $roles_array)) {
      $form['account']['name']['#access'] = FALSE;
      $form['account']['name']['#required'] = FALSE;
      //      $form['account']['pass']['#required'] = FALSE;

      $form['account']['pass']['#access'] = FALSE;
      $form['account']['pass']['#required'] = FALSE;

    }
  }
  //  if ($triggering_element["#name"] == 'roles[buyer]') {
  //
  //    $selected_buyer_chose = TRUE;
  //  }

  $form['account']['#attributes']['id'] = Html::getUniqueId('test_id');

  $form['account']['roles']['#ajax'] = [
    'callback' => 'budova_reloadUser',
    'wrapper' => $form['account']['#attributes']['id'],
  ];


  $form['actions']['submit']['#submit'][] = 'budova_users_submit_do_redirect';
}




/**
 * Implements hook_form_FORM_ID_alter().
 */
function budova_form_budova_real_estate_add_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

  $triggering_element = $form_state->getTriggeringElement();

  $parent_city_field_name = 'field_district_of_the_city';
  $child_city_field_name = 'field_subdistrict_of_city';
  $parent_type_real_estate_field_name = 'field_type_of_real_estate';
  $child_type_real_estate_field_name = 'field_subtype_of_real_estate';

//  $selected_city_rayon = FALSE;
//  $selected_type_real_estate = FALSE;

  if ($triggering_element) {

    if ($triggering_element["#field_name"] == $parent_city_field_name) {
      $selected_rayon_city_id = $triggering_element["#value"];
      foreach ($form[$child_city_field_name]["widget"]["#options"] as $key => $option) {
       $taxonomy_entity =  \Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($key);
       if ($taxonomy_entity) {
         $field_rayon = $taxonomy_entity->field_district_of_the_city->target_id;
          if ($field_rayon !== $selected_rayon_city_id) {
            unset($form[$child_city_field_name]["widget"]["#options"][$key]);
         }
       }
      }
      $selected_city_rayon = TRUE;

    }


    if ($triggering_element["#field_name"] == $parent_type_real_estate_field_name) {
      $selected_type_real_estate_id = $triggering_element["#value"];

      foreach ($form[$child_type_real_estate_field_name]["widget"]["#options"] as $key => $option) {
        $taxonomy_entity =  \Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($key);
        if ($taxonomy_entity) {
          $type_real_estate_field_id = $taxonomy_entity->field_type_of_real_estate->target_id;
          if ($type_real_estate_field_id !== $selected_type_real_estate_id) {
            unset($form[$child_type_real_estate_field_name]["widget"]["#options"][$key]);
          }
        }
      }
      $selected_type_real_estate = TRUE;
    }
  }

  //if ($triggering_element["#field_name"] == $parent_city_field_name) {

  $form[$child_city_field_name]['#attributes']['id'] = $child_city_field_name . '__id';
  $form[$child_type_real_estate_field_name]['#attributes']['id'] = $child_type_real_estate_field_name . '__id';

//  if ($selected_city_rayon !== FALSE) {
    $form[$parent_city_field_name]['widget']['#ajax'] = [
      'callback' => 'budova_reloadCity',
      'wrapper' => $form[$child_city_field_name]['#attributes']['id'],
    ];
//  }

//  if ($selected_type_real_estate !== FALSE) {
    $form[$parent_type_real_estate_field_name]['widget']['#ajax'] = [
      'callback' => 'budova_reloadType',
      'wrapper' => $form[$child_type_real_estate_field_name]['#attributes']['id'],
    ];
//  }

  $value_type_real_estate = $triggering_element["#value"];

  // Hide field 'Число кімнат' when picking select 'Вид нерухомості -> Земельна ділянка || Комерційна нерухомість'

    $form['field_number_of_rooms']['#states'] = [
      'invisible' => [
        [
        'select[name="field_type_of_real_estate"]' => ['value' => '70'],
          ],
        'or',
        [
          'select[name="field_type_of_real_estate"]' => ['value' => '72'],
        ],
      ],
    ];

  // Hide field 'Поверх' when picking select 'Вид нерухомості -> Земельна ділянка'

    $form['field_floor']['#states'] = [
      'invisible' => [
        'select[name="field_type_of_real_estate"]' => ['value' => '70'],
      ],
    ];

  $form['field_num_floor']['#states'] = [
    'invisible' => [
      'select[name="field_type_of_real_estate"]' => ['value' => '70'],
    ],
  ];

  // Hide field 'Планування квартир' when picking select 'Вид нерухомості -> Земельна ділянка || Приватний сектор || Комерційна нерухомість'

  $form['field_appartment_plan']['#states'] = [
    'invisible' => [
      [
        'select[name="field_type_of_real_estate"]' => ['value' => '70'],

      ],
      'or',
      [
        'select[name="field_type_of_real_estate"]' => ['value' => '73'],
      ],
      'or',
      [
        'select[name="field_type_of_real_estate"]' => ['value' => '72'],
      ],
    ],
  ];

  // Hide field 'Матеріал стін' when picking select 'Вид нерухомості -> Земельна ділянка '

    $form['field_wall_material']['#states'] = [
      'invisible' => [
        'select[name="field_type_of_real_estate"]' => ['value' => '70'],
      ],
    ];

  // Hide field 'Суміжність кімнат' when picking select 'Вид нерухомості -> Земельна ділянка || Комерційна нерухомість'

    $form['field_contiguity_of_rooms']['#states'] = [
      'invisible' => [
        [
          'select[name="field_type_of_real_estate"]' => ['value' => '70'],
        ],
        'or',
        [
          'select[name="field_type_of_real_estate"]' => ['value' => '72'],
        ],
      ],
    ];

  // Hide field 'Висота стель' when picking select 'Вид нерухомості -> Земельна ділянка'

  $form['field_ceiling_height']['#states'] = [
    'invisible' => [
      'select[name="field_type_of_real_estate"]' => ['value' => '70'],
    ],
  ];

  // Hide field 'Загальна площа' when picking select 'Вид нерухомості -> Земельна ділянка'

    $form['field_general_area']['#states'] = [
      'invisible' => [
        'select[name="field_type_of_real_estate"]' => ['value' => '70'],
      ],
    ];

  // Hide field 'Житлова площа' when picking select 'Вид нерухомості -> Земельна ділянка || Комерційна нерухомість'

    $form['field_living_area']['#states'] = [
      'invisible' => [
        [
          'select[name="field_type_of_real_estate"]' => ['value' => '70'],
        ],
        'or',
        [
          'select[name="field_type_of_real_estate"]' => ['value' => '72'],
        ],
      ],
    ];

  // Hide field 'Площа кухні' when picking select 'Вид нерухомості -> Земельна ділянка || Комерційна нерухомість'

    $form['field_kitchen_area']['#states'] = [
      'invisible' => [
        [
          'select[name="field_type_of_real_estate"]' => ['value' => '70'],
        ],
        'or',
        [
          'select[name="field_type_of_real_estate"]' => ['value' => '72'],
        ],
      ],
    ];

  // Hide field 'Площа участку' when picking select 'Вид нерухомості ->  Комерційна нерухомість'

  $form['field_area_region']['#states'] = [
    'invisible' => [
      'select[name="field_type_of_real_estate"]' => ['value' => '72'],
    ],
  ];

  // Hide field 'Конфігурація участку' when picking select 'Вид нерухомості -> Комерційна нерухомість'

  $form['field_site_configuration']['#states'] = [
    'invisible' => [
      'select[name="field_type_of_real_estate"]' => ['value' => '72'],
    ],
  ];

  // Hide field 'Категорія участку' when picking select 'Вид нерухомості -> Комерційна нерухомість'

  $form['field_site_category']['#states'] = [
    'invisible' => [
      'select[name="field_type_of_real_estate"]' => ['value' => '72'],
    ],
  ];



  $form['field_pidrayon_mista_test']['#prefix'] = "<div id='____ololol_wrapper'>";
  $form['field_pidrayon_mista_test']['#suffix'] = '</div>';


  $form['actions']['submit']['#submit'][] = 'budova_real_estate_submit_do_redirect';

}

function budova_form_budova_real_estate_edit_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  $z = 0;

  $triggering_element = $form_state->getTriggeringElement();

  $parent_city_field_name = 'field_district_of_the_city';
  $child_city_field_name = 'field_subdistrict_of_city';
  $parent_type_real_estate_field_name = 'field_type_of_real_estate';
  $child_type_real_estate_field_name = 'field_subtype_of_real_estate';

  //  $selected_city_rayon = FALSE;
  //  $selected_type_real_estate = FALSE;

  if ($triggering_element) {

    if ($triggering_element["#field_name"] == $parent_city_field_name) {
      $selected_rayon_city_id = $triggering_element["#value"];
      foreach ($form[$child_city_field_name]["widget"]["#options"] as $key => $option) {
        $taxonomy_entity =  \Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($key);
        if ($taxonomy_entity) {
          $field_rayon = $taxonomy_entity->field_district_of_the_city->target_id;
          if ($field_rayon !== $selected_rayon_city_id) {
            unset($form[$child_city_field_name]["widget"]["#options"][$key]);
          }
        }
      }
      $selected_city_rayon = TRUE;

    }


    if ($triggering_element["#field_name"] == $parent_type_real_estate_field_name) {
      $selected_type_real_estate_id = $triggering_element["#value"];

      foreach ($form[$child_type_real_estate_field_name]["widget"]["#options"] as $key => $option) {
        $taxonomy_entity =  \Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($key);
        if ($taxonomy_entity) {
          $type_real_estate_field_id = $taxonomy_entity->field_type_of_real_estate->target_id;
          if ($type_real_estate_field_id !== $selected_type_real_estate_id) {
            unset($form[$child_type_real_estate_field_name]["widget"]["#options"][$key]);
          }
        }
      }
      $selected_type_real_estate = TRUE;
    }
  }

  //if ($triggering_element["#field_name"] == $parent_city_field_name) {

  $form[$child_city_field_name]['#attributes']['id'] = $child_city_field_name . '__id';
  $form[$child_type_real_estate_field_name]['#attributes']['id'] = $child_type_real_estate_field_name . '__id';

  //  if ($selected_city_rayon !== FALSE) {
  $form[$parent_city_field_name]['widget']['#ajax'] = [
    'callback' => 'budova_reloadCity',
    'wrapper' => $form[$child_city_field_name]['#attributes']['id'],
  ];
  //  }

  //  if ($selected_type_real_estate !== FALSE) {
  $form[$parent_type_real_estate_field_name]['widget']['#ajax'] = [
    'callback' => 'budova_reloadType',
    'wrapper' => $form[$child_type_real_estate_field_name]['#attributes']['id'],
  ];
  //  }

  $value_type_real_estate = $triggering_element["#value"];

  // Hide field 'Число кімнат' when picking select 'Вид нерухомості -> Земельна ділянка || Комерційна нерухомість'

  $form['field_number_of_rooms']['#states'] = [
    'invisible' => [
      [
        'select[name="field_type_of_real_estate"]' => ['value' => '70'],
      ],
      'or',
      [
        'select[name="field_type_of_real_estate"]' => ['value' => '72'],
      ],
    ],
  ];

  // Hide field 'Поверх' when picking select 'Вид нерухомості -> Земельна ділянка'

  $form['field_floor']['#states'] = [
    'invisible' => [
      'select[name="field_type_of_real_estate"]' => ['value' => '70'],
    ],
  ];

  $form['field_num_floor']['#states'] = [
    'invisible' => [
      'select[name="field_type_of_real_estate"]' => ['value' => '70'],
    ],
  ];

  // Hide field 'Планування квартир' when picking select 'Вид нерухомості -> Земельна ділянка || Приватний сектор || Комерційна нерухомість'

  $form['field_appartment_plan']['#states'] = [
    'invisible' => [
      [
        'select[name="field_type_of_real_estate"]' => ['value' => '70'],

      ],
      'or',
      [
        'select[name="field_type_of_real_estate"]' => ['value' => '73'],
      ],
      'or',
      [
        'select[name="field_type_of_real_estate"]' => ['value' => '72'],
      ],
    ],
  ];

  // Hide field 'Матеріал стін' when picking select 'Вид нерухомості -> Земельна ділянка '

  $form['field_wall_material']['#states'] = [
    'invisible' => [
      'select[name="field_type_of_real_estate"]' => ['value' => '70'],
    ],
  ];

  // Hide field 'Суміжність кімнат' when picking select 'Вид нерухомості -> Земельна ділянка || Комерційна нерухомість'

  $form['field_contiguity_of_rooms']['#states'] = [
    'invisible' => [
      [
        'select[name="field_type_of_real_estate"]' => ['value' => '70'],
      ],
      'or',
      [
        'select[name="field_type_of_real_estate"]' => ['value' => '72'],
      ],
    ],
  ];

  // Hide field 'Висота стель' when picking select 'Вид нерухомості -> Земельна ділянка'

  $form['field_ceiling_height']['#states'] = [
    'invisible' => [
      'select[name="field_type_of_real_estate"]' => ['value' => '70'],
    ],
  ];

  // Hide field 'Загальна площа' when picking select 'Вид нерухомості -> Земельна ділянка'

  $form['field_general_area']['#states'] = [
    'invisible' => [
      'select[name="field_type_of_real_estate"]' => ['value' => '70'],
    ],
  ];

  // Hide field 'Житлова площа' when picking select 'Вид нерухомості -> Земельна ділянка || Комерційна нерухомість'

  $form['field_living_area']['#states'] = [
    'invisible' => [
      [
        'select[name="field_type_of_real_estate"]' => ['value' => '70'],
      ],
      'or',
      [
        'select[name="field_type_of_real_estate"]' => ['value' => '72'],
      ],
    ],
  ];

  // Hide field 'Площа кухні' when picking select 'Вид нерухомості -> Земельна ділянка || Комерційна нерухомість'

  $form['field_kitchen_area']['#states'] = [
    'invisible' => [
      [
        'select[name="field_type_of_real_estate"]' => ['value' => '70'],
      ],
      'or',
      [
        'select[name="field_type_of_real_estate"]' => ['value' => '72'],
      ],
    ],
  ];

  // Hide field 'Площа участку' when picking select 'Вид нерухомості ->  Комерційна нерухомість'

  $form['field_area_region']['#states'] = [
    'invisible' => [
      'select[name="field_type_of_real_estate"]' => ['value' => '72'],
    ],
  ];

  // Hide field 'Конфігурація участку' when picking select 'Вид нерухомості -> Комерційна нерухомість'

  $form['field_site_configuration']['#states'] = [
    'invisible' => [
      'select[name="field_type_of_real_estate"]' => ['value' => '72'],
    ],
  ];

  // Hide field 'Категорія участку' when picking select 'Вид нерухомості -> Комерційна нерухомість'

  $form['field_site_category']['#states'] = [
    'invisible' => [
      'select[name="field_type_of_real_estate"]' => ['value' => '72'],
    ],
  ];



  $form['field_pidrayon_mista_test']['#prefix'] = "<div id='____ololol_wrapper'>";
  $form['field_pidrayon_mista_test']['#suffix'] = '</div>';


  $form['actions']['submit']['#submit'][] = 'budova_real_estate_submit_do_redirect';

}




/**
 * Implements hook_form_FORM_ID_alter().
 */

function budova_form_budova_applications_add_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {


  $triggering_element = $form_state->getTriggeringElement();

  $parent_applications_city_field_name = 'field_district_of_the_city';
  $child_applications_city_field_name = 'field_subdistrict_of_city';
  $parent_applications_type_real_estate_field_name = 'field_type_of_real_estate';
  $child_applications_type_real_estate_field_name = 'field_subtype_of_real_estate';

  //  $selected_city_rayon = FALSE;
  //  $selected_type_real_estate = FALSE;

  if ($triggering_element) {

    if ($triggering_element["#field_name"] == $parent_applications_city_field_name) {
      $selected_rayon_city_id = $triggering_element["#value"];
      foreach ($form[$child_applications_city_field_name]["widget"]["#options"] as $key => $option) {
        $taxonomy_entity =  \Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($key);
        if ($taxonomy_entity) {
          $field_rayon = $taxonomy_entity->field_district_of_the_city->target_id;
          if ($field_rayon !== $selected_rayon_city_id) {
            unset($form[$child_applications_city_field_name]["widget"]["#options"][$key]);
          }
        }
      }
      $selected_applications_city_rayon = TRUE;
      $y = 0;

    }

    if ($triggering_element["#field_name"] == $parent_applications_type_real_estate_field_name) {
      $selected_type_real_estate_id = $triggering_element["#value"];

      foreach ($form[$child_applications_type_real_estate_field_name]["widget"]["#options"] as $key => $option) {
        $taxonomy_entity =  \Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($key);
        if ($taxonomy_entity) {
          $type_real_estate_field_id = $taxonomy_entity->field_type_of_real_estate->target_id;
          if ($type_real_estate_field_id !== $selected_type_real_estate_id) {
            unset($form[$child_applications_type_real_estate_field_name]["widget"]["#options"][$key]);
          }
        }
      }

      $selected_applications_type_real_estate = TRUE;
    }

  }

  //if ($triggering_element["#field_name"] == $parent_city_field_name) {

  $form[$child_applications_city_field_name]['#attributes']['id'] = $child_applications_city_field_name . '__id';
  $form[$child_applications_type_real_estate_field_name]['#attributes']['id'] = $child_applications_type_real_estate_field_name . '__id';

//  if ($selected_applications_city_rayon !== FALSE) {
    $form[$parent_applications_city_field_name]['widget']['#ajax'] = [
      'callback' => 'budova_reloadCity',
      'wrapper' => $form[$child_applications_city_field_name]['#attributes']['id'],
    ];
//  }

//  if ($selected_applications_type_real_estate !== FALSE) {
    $form[$parent_applications_type_real_estate_field_name]['widget']['#ajax'] = [
      'callback' => 'budova_reloadType',
      'wrapper' => $form[$child_applications_type_real_estate_field_name]['#attributes']['id'],
    ];
//  }


  // Hide field 'Поверх' when picking select 'Вид нерухомості -> Земельна ділянка'

  $form['field_min_area']['#states'] = [
    'invisible' => [
      'select[name="field_type_of_real_estate"]' => ['value' => '70'],
    ],
  ];

  $form['field_max_area']['#states'] = [
    'invisible' => [
      'select[name="field_type_of_real_estate"]' => ['value' => '70'],
    ],
  ];

  $form['field_min_floor']['#states'] = [
    'invisible' => [
      'select[name="field_type_of_real_estate"]' => ['value' => '70'],
    ],
  ];

  $form['field_max_floor']['#states'] = [
    'invisible' => [
      'select[name="field_type_of_real_estate"]' => ['value' => '70'],
    ],
  ];

  $form['field_min_rooms']['#states'] = [
    'invisible' => [
      'select[name="field_type_of_real_estate"]' => ['value' => '70'],
    ],
  ];

  $form['	field_max_rooms']['#states'] = [
    'invisible' => [
      'select[name="field_type_of_real_estate"]' => ['value' => '70'],
    ],
  ];

  $form['field_appartment_plan']['#states'] = [
    'invisible' => [
        [
          'select[name="field_type_of_real_estate"]' => ['value' => '70'],
        ],
      'or',
        [
          'select[name="field_type_of_real_estate"]' => ['value' => '72'],
        ],
      ],
  ];




  $form['field_subdistrict_of_city']['#prefix'] = "<div id='____ololol_wrapper'>";
  $form['field_subdistrict_of_city']['#suffix'] = '</div>';


  $form['actions']['submit']['#submit'][] = 'budova_applications_submit_do_redirect';
}


function budova_form_budova_applications_edit_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {


  $triggering_element = $form_state->getTriggeringElement();

  $parent_applications_city_field_name = 'field_district_of_the_city';
  $child_applications_city_field_name = 'field_subdistrict_of_city';
  $parent_applications_type_real_estate_field_name = 'field_type_of_real_estate';
  $child_applications_type_real_estate_field_name = 'field_subtype_of_real_estate';

  //  $selected_city_rayon = FALSE;
  //  $selected_type_real_estate = FALSE;

  if ($triggering_element) {

    if ($triggering_element["#field_name"] == $parent_applications_city_field_name) {
      $selected_rayon_city_id = $triggering_element["#value"];
      foreach ($form[$child_applications_city_field_name]["widget"]["#options"] as $key => $option) {
        $taxonomy_entity =  \Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($key);
        if ($taxonomy_entity) {
          $field_rayon = $taxonomy_entity->field_district_of_the_city->target_id;
          if ($field_rayon !== $selected_rayon_city_id) {
            unset($form[$child_applications_city_field_name]["widget"]["#options"][$key]);
          }
        }
      }
      $selected_applications_city_rayon = TRUE;
      $y = 0;

    }

    if ($triggering_element["#field_name"] == $parent_applications_type_real_estate_field_name) {
      $selected_type_real_estate_id = $triggering_element["#value"];

      foreach ($form[$child_applications_type_real_estate_field_name]["widget"]["#options"] as $key => $option) {
        $taxonomy_entity =  \Drupal::entityTypeManager()->getStorage('taxonomy_term')->load($key);
        if ($taxonomy_entity) {
          $type_real_estate_field_id = $taxonomy_entity->field_type_of_real_estate->target_id;
          if ($type_real_estate_field_id !== $selected_type_real_estate_id) {
            unset($form[$child_applications_type_real_estate_field_name]["widget"]["#options"][$key]);
          }
        }
      }

      $selected_applications_type_real_estate = TRUE;
    }

  }

  //if ($triggering_element["#field_name"] == $parent_city_field_name) {

  $form[$child_applications_city_field_name]['#attributes']['id'] = $child_applications_city_field_name . '__id';
  $form[$child_applications_type_real_estate_field_name]['#attributes']['id'] = $child_applications_type_real_estate_field_name . '__id';

  //  if ($selected_applications_city_rayon !== FALSE) {
  $form[$parent_applications_city_field_name]['widget']['#ajax'] = [
    'callback' => 'budova_reloadCity',
    'wrapper' => $form[$child_applications_city_field_name]['#attributes']['id'],
  ];
  //  }

  //  if ($selected_applications_type_real_estate !== FALSE) {
  $form[$parent_applications_type_real_estate_field_name]['widget']['#ajax'] = [
    'callback' => 'budova_reloadType',
    'wrapper' => $form[$child_applications_type_real_estate_field_name]['#attributes']['id'],
  ];
  //  }


  // Hide field 'Поверх' when picking select 'Вид нерухомості -> Земельна ділянка'

  $form['field_min_area']['#states'] = [
    'invisible' => [
      'select[name="field_type_of_real_estate"]' => ['value' => '70'],
    ],
  ];

  $form['field_max_area']['#states'] = [
    'invisible' => [
      'select[name="field_type_of_real_estate"]' => ['value' => '70'],
    ],
  ];

  $form['field_min_floor']['#states'] = [
    'invisible' => [
      'select[name="field_type_of_real_estate"]' => ['value' => '70'],
    ],
  ];

  $form['field_max_floor']['#states'] = [
    'invisible' => [
      'select[name="field_type_of_real_estate"]' => ['value' => '70'],
    ],
  ];

  $form['field_min_rooms']['#states'] = [
    'invisible' => [
      'select[name="field_type_of_real_estate"]' => ['value' => '70'],
    ],
  ];

  $form['	field_max_rooms']['#states'] = [
    'invisible' => [
      'select[name="field_type_of_real_estate"]' => ['value' => '70'],
    ],
  ];

  $form['field_appartment_plan']['#states'] = [
    'invisible' => [
      [
        'select[name="field_type_of_real_estate"]' => ['value' => '70'],
      ],
      'or',
      [
        'select[name="field_type_of_real_estate"]' => ['value' => '72'],
      ],
    ],
  ];




  $form['field_subdistrict_of_city']['#prefix'] = "<div id='____ololol_wrapper'>";
  $form['field_subdistrict_of_city']['#suffix'] = '</div>';


  $form['actions']['submit']['#submit'][] = 'budova_applications_submit_do_redirect';
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function budova_form_budova_events_add_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
//  $events_type_field_name = 'field_type_of_event';
//
//  $form[$events_type_field_name]['widget']['#ajax'] = [
//    'callback' => 'budova_reloadCity',
//    'wrapper' => $form[$events_type_field_name]['#attributes']['id'],
//  ];

  $form['field_status_of_call']['#states'] = [
    'invisible' => [
      [
        'select[name="field_type_of_event"]' => ['value' => 'meeting'],
      ],
      'or',
      [
        'select[name="field_type_of_event"]' => ['value' => 'showing'],
      ],
      'or',
      [
        'select[name="field_type_of_event"]' => ['value' => 'showing_with_photos'],
      ],
      'or',
      [
        'select[name="field_type_of_event"]' => ['value' => 'reports'],
      ],
      'or',
      [
        'select[name="field_type_of_event"]' => ['value' => 'deals'],
      ],
      'or',
      [
        'select[name="field_type_of_event"]' => ['value' => 'avances'],
      ],
    ],
  ];


  $form['field_status_of_offer']['#states'] = [
    'invisible' => [
      [
        'select[name="field_type_of_event"]' => ['value' => 'meeting'],
      ],
      'or',
      [
        'select[name="field_type_of_event"]' => ['value' => 'showing'],
      ],
      'or',
      [
        'select[name="field_type_of_event"]' => ['value' => 'showing_with_photos'],
      ],
      'or',
      [
        'select[name="field_type_of_event"]' => ['value' => 'reports'],
      ],
      'or',
      [
        'select[name="field_type_of_event"]' => ['value' => 'avances'],
      ],
    ],
  ];


  $form['actions']['submit']['#submit'][] = 'budova_events_submit_do_redirect';

}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function budova_form_budova_events_edit_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

  $form['field_status_of_call']['#states'] = [
    'invisible' => [
      [
        'select[name="field_type_of_event"]' => ['value' => 'meeting'],
      ],
      'or',
      [
        'select[name="field_type_of_event"]' => ['value' => 'showing'],
      ],
      'or',
      [
        'select[name="field_type_of_event"]' => ['value' => 'showing_with_photos'],
      ],
      'or',
      [
        'select[name="field_type_of_event"]' => ['value' => 'reports'],
      ],
      'or',
      [
        'select[name="field_type_of_event"]' => ['value' => 'deals'],
      ],
      'or',
      [
        'select[name="field_type_of_event"]' => ['value' => 'avances'],
      ],
    ],
  ];


  $form['field_status_of_offer']['#states'] = [
    'invisible' => [
      [
        'select[name="field_type_of_event"]' => ['value' => 'meeting'],
      ],
      'or',
      [
        'select[name="field_type_of_event"]' => ['value' => 'showing'],
      ],
      'or',
      [
        'select[name="field_type_of_event"]' => ['value' => 'showing_with_photos'],
      ],
      'or',
      [
        'select[name="field_type_of_event"]' => ['value' => 'reports'],
      ],
      'or',
      [
        'select[name="field_type_of_event"]' => ['value' => 'avances'],
      ],
    ],
  ];


  $form['actions']['submit']['#submit'][] = 'budova_events_submit_do_redirect';

}


  function budova_reloadCity(array $form, FormStateInterface $form_state) {
    return $form["field_subdistrict_of_city"];
  }

function budova_reloadType(array $form, FormStateInterface $form_state) {
  return $form["field_subtype_of_real_estate"];
}

function budova_reloadUser(array $form, FormStateInterface $form_state) {
  return $form["account"];
}


function budova_real_estate_submit_do_redirect($form, &$form_state) {
  $url = Url::fromRoute('view.real_estate.page_real_estate');
  $form_state->setRedirectUrl($url);
}

function budova_applications_submit_do_redirect($form, &$form_state) {
  $url = Url::fromRoute('view.applications.applications_page');
  $form_state->setRedirectUrl($url);
}

function budova_events_submit_do_redirect($form, &$form_state) {
  $url = Url::fromRoute('view.events.budova_events_page');
  $form_state->setRedirectUrl($url);
}



function budova_users_submit_do_redirect($form, &$form_state) {
  $url = Url::fromRoute('view.clients.page_clients');
  $form_state->setRedirectUrl($url);
}

/**
 * Implements hook_entity_presave().
 */
//function budova_entity_presave(\Drupal\Core\Entity\EntityInterface $entity) {
//
//}

/**
 * Implements hook_ENTITY_TYPE_presave().
 */
function budova_user_presave(\Drupal\Core\Entity\EntityInterface $entity) {
  if ($entity->isNew()) {
    $name = $entity->field_user_name->getValue();
    $surname = $entity->field_surname->getValue();
    if (empty($surname[0]['value'])) {
      $surname[0]['value'] = ' ';
    }

    $phone = $entity->field_contact->getValue();
    /** @var \Drupal\user\Entity\User $entity */
    $roles_array = $entity->roles->getValue();

    foreach ($roles_array as $key => $role) {
      $roles[$key] = $role['target_id'];
    }

    if (!empty($roles_array)) {
      if (in_array("buyer", $roles) || in_array("seller", $roles)) {
        /** @var \Drupal\user\Entity\User $entity */
        if ($entity->name->value == "default") {
          /** @var \Drupal\user\Entity\User $entity */
          $entity->name->value = $name[0]['value'] . ' ' . $surname[0]['value'];
          $entity->pass->value = '12345';
        }
      }
    }
  }
}


/**
 * Implements hook_ENTITY_TYPE_presave().
 */
//function budova_budova_real_estate_presave(\Drupal\Core\Entity\EntityInterface $entity) {
//
//  $server = "mariadb";
//  $username = "drupal";
//  $password = "drupal";
//  $database = "drupal";
//
//  $conn = new mysqli($server, $username, $password, $database);
//
//  $result = $conn->query("SELECT * FROM `budova_real_estate` ORDER BY `id` ASC LIMIT 1");
//
//  $label_array = $result->fetch_assoc();
//
//  $label = $label_array['label'];
//
//  $changed_label = (int)$label + 1;
//
//  $entity->label = $changed_label;
//
//  $conn->close();
//}
